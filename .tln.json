{
  "stages":{
    "prereq":{
      "shell":[
        "envsubst < .env.template > .env",
        "envsubst < sonar-project.properties.template > sonar-project.properties",
        "npm i"
      ]
    },
    "build":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "npm i"
      ]
    },
    "test":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "npm run jasmine"
      ]
    },
    "serve":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "npm run serve"
      ]
    },
    "docker.build":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker build \\",
        " -t ${COMPONENT_ID}:${COMPONENT_VERSION} ."
      ]
    },
    "docker.run":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker run -d --rm \\",
        " --env-file ./.env \\",
        " -p $COMPONENT_PARAM_PORT:$COMPONENT_PARAM_PORT \\",
        " -p $COMPONENT_PARAM_PORTS:$COMPONENT_PARAM_PORTS \\",
        "  --name ${COMPONENT_ID} ${COMPONENT_ID}:${COMPONENT_VERSION}"
      ]
    },
    "docker.save":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker save -o ${COMPONENT_ID}-${COMPONENT_VERSION}.tar ${COMPONENT_ID}:${COMPONENT_VERSION}"
      ]
    },
    "docker.load":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker load -i ${COMPONENT_ID}-${COMPONENT_VERSION}.tar"
      ]
    },

    "docker.stop":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker stop ${COMPONENT_ID}",
        "docker rmi ${COMPONENT_ID}:${COMPONENT_VERSION}"
      ]
    }
  }
}